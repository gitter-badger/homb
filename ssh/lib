#!/bin/bash
################################################################################
# SSH Bash Library
#
# SSH specific routines. These help ssh keep track of sessions amoung other 
# customizations.
#
################################################################################


#################################################################################
# Set Auth Sock
#
# Sets the value of the SSH_AUTH_SOCK variable to the location of the symlink 
# that gets added to ${HOME}/.ssh/ssh_auth_sock ($SSH_AUTH_SOCK_LNIK)
#
#################################################################################
set_auth_sock() {

 export SSH_AUTH_SOCK="$(file "${SSH_AUTH_SOCK}" |cut -f 2 -d\`|cut -f 1 -d\')"
 echo "set_auth_sock(${SSH_AUTH_SOCK})"

}


#################################################################################
# Check for Valid Auth Sock
#
# This checks to make sure the symbolic link is ok. If it's is not it will call
# set_auth_sock() to correct the issue.
#
#################################################################################
check_auth_sock() {

  # check initial terminal to see if we are switched
  # find the real ssh_auth_sock
  if [ "$(test_symlink "${SSH_AUTH_SOCK_LINK}")" ]; then 

    set_auth_sock

  else

    echo "check_auth_sock(): failed"
    return 13;
    # Need to fix what happens when the authsock symlink fails.
    # find new symbolic link based on SSH_AUTH_SOCK.

  fi
}

# vim: ft=sh
