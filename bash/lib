#!/bin/bash

#################################################################################
#
# bash_happy
#
# Checks to see that we are indeed running teh bash.
#
#################################################################################
function bash_happy() {

  local which=$(which bash > /dev/null)
  local alias=$(alias bash &> /dev/null)  

  if [ "${SHELL}" == "$(which bash)" ]; then

    $which || $alias || return 1
    return 0

  else

    return 1

  fi

}


#################################################################################
#
# test_socket_link
#
# Checks for the ssh_auth_sock link to see if it is valid or not.
#
#################################################################################
function test_socket_link(){

  local broken=$(find "$1" -type l -print0| \
    xargs -r0 file| \
    grep "broken symbolic"| \
    sed -e 's/^\|: *broken symbolic.*$/"/g')

  if [ $? -ne 0 ]; then

    #echo "WARNING: Issue with SSH_AUTH_SOCK link."
    return 1

  else

    return 0

  fi

}


#################################################################################
# 
# include
#
# A quick way to include files for the homb project.
#
#################################################################################
include(){

  if [ -f "${HOMBASE}/${1}" ];  then

    source "${HOMBASE}/${1}"

  else

    if [ -f "${HOMBASE}/${1}/rc" ]; then
      
      # DANGER! We don't include tmux rc, but it's not failing either.
      if [ "${1}" == "tmux" ]; then
       
        return 0 # Grumpy cat. No.

      else

        source "${HOMBASE}/${1}/rc"


      fi

    else

      return 1 #fail

    fi

  fi

}

#################################################################################
# 
# getGit
#
# We are going to use this over __get_ps1() because we want to swap the the 
# symbology for colors on interactive scripts when possible.
#
#################################################################################
function getGit(){

  # Get the data from git bash completion and remove the spaces... ugh spaces.
  GIT_PS1=$(__git_ps1 "(%s)") 

  if [ "${GIT_PS1}" ]; then

    echo -en "$GIT_PS1"

  fi

}


#################################################################################
#
# interactive
#
# Check to see if the shell is interactive or not.  Returns a 1 if the shell is
# not a login/interactive shell.
#
#################################################################################
function interactive(){

  if [ "${PS1}" ]; then

    return 0

  else

    return 1

  fi
}


# vim: ft=sh
