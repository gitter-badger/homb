#!/bin/bash
################################################################################
# TMux Functions
################################################################################

################################################################################
# tomb
#
# Alias for tmux attach-session -t [$1], but will connect to the first session.
# TODO Add logic for multiple sessions and prompt the user for the correct one.
#
################################################################################
tomb() {

  if [ -z "${1}" ]; then

    local session_ls=$(tmux list-sessions 2> /dev/null|cut -f 1 -d\:)

    if [ -z "${session_ls}" ]; then 

      echo "No sessions found."
      set_auth_sock
      sleep 1s
      tmux new-session -s tomb
      return 1

    else

      local count=$(($(echo -ne "$session_ls"|wc -l) + 1))

      if [[  "$count" > "1" ]]; then

        local current=0
        IFS=$'\n'
        sessions="$(tmux list-sessions 2> /dev/null)"
        declare -a targets=()

        echo "Gathering sessions data..."
        for item in $sessions; do

          title=$(echo "${item}"|cut -f 1 -d\:)
          properties=$(echo "${item}"|cut -f 2- -d\:)

          targets[$current]=$title
          current=$(($current + 1))

        done

        PS3="Choose a session you want to revive. (${count} found)"
        safe_word="Quit"

        select option in "${targets[@]}" "Quit"; do

          if [ ! -z "${targets[$((${REPLY} - 1 ))]}" ]; then
               
            # if they request to to quit.. using the safeword.
            session_target="${targets[$((${REPLY} - 1))]}"

          else

            echo "else:${targets[$((${REPLY} - 1))]}"

          fi
        done

      else
        session_target=$sessions_ls
      fi

      echo "Success: You choose: $session_target"
      #set_auth_sock
      #$tmux attach-session -t $session_target

    fi

  else

    session_ls=$(tmux list-sessions 2> /dev/null|cut -f 1 -d\:|grep $1)

    if [ -z $session_ls ]; then

      echo "Session ${1} not found."
      set_auth_sock
      sleep 1s
      tmux new-session -s $1


    else

      echo "tmux: Attaching session ${session_ls}"
      set_auth_sock
      sleep 1s
      tmux attach-session -t $1
 
    fi

  fi
}
